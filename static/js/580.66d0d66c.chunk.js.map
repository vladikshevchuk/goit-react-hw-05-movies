{"version":3,"file":"static/js/580.66d0d66c.chunk.js","mappings":"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","sources":["API/api-service.js","pages/Home.jsx"],"sourcesContent":["/* eslint-disable array-callback-return */\nimport axios from 'axios';\nimport no_movie from 'images/no-movie.jpg';\n\nconst API_KEY = '?api_key=fb4eca5dd3545235e4fd6796c70d4d40';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nasync function getPopularMovies() {\n  try {\n    const response = await axios.get(`${MAIN_URL}/trending/all/day${API_KEY}`);\n    const movies = await response.data.results;\n    movies.map(movie => {\n      if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    });\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getFindMovies(query) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/search/movie${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const movies = await response.data.results;\n    movies.map(movie => {\n      if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    });\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}${API_KEY}&language=en-US`\n    );\n    const movie = response.data;\n    if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    return movie;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n    );\n    const cast = response.data.cast;\n    cast.map(actor => {\n      if (actor.profile_path !== null) {\n        actor.profile_path = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n      } else {\n        actor.profile_path = no_movie;\n      }\n    });\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const api = {\n  getPopularMovies,\n  getFindMovies,\n  getDetails,\n  getCredits,\n  getReviews,\n};\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { api } from 'API/api-service';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    api.getPopularMovies().then(items => setMovies(items));\n  }, []);\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (<li key={movie.id}>\n          <NavLink to={`movies/${movie.id}`} state={{from: location}}>\n            <img src={movie.poster_path} alt=\"\" width=\"250px\" />\n            <p className='title'>Title: {movie.title || movie.name}</p>\n          </NavLink>\n        </li>\n      )})}\n    </ul>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","MAIN_URL","getPopularMovies","axios","response","data","results","movies","map","movie","poster_path","no_movie","console","error","getFindMovies","query","getDetails","movieId","getCredits","cast","actor","profile_path","getReviews","reviews","api","useState","setMovies","location","useLocation","useEffect","then","items","to","id","state","from","src","alt","width","className","title","name"],"sourceRoot":""}