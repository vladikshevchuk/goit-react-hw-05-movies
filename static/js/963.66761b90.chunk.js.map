{"version":3,"file":"static/js/963.66761b90.chunk.js","mappings":"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","sources":["API/api-service.js","components/styledCssForLink/ButtonStyled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["/* eslint-disable array-callback-return */\nimport axios from 'axios';\nimport no_movie from 'images/no-movie.jpg';\n\nconst API_KEY = '?api_key=fb4eca5dd3545235e4fd6796c70d4d40';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nasync function getPopularMovies() {\n  try {\n    const response = await axios.get(`${MAIN_URL}/trending/all/day${API_KEY}`);\n    const movies = await response.data.results;\n    movies.map(movie => {\n      if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    });\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getFindMovies(query) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/search/movie${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const movies = await response.data.results;\n    movies.map(movie => {\n      if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    });\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}${API_KEY}&language=en-US`\n    );\n    const movie = response.data;\n    if (movie.poster_path !== null) {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      } else {\n        movie.poster_path = no_movie;\n      }\n    return movie;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n    );\n    const cast = response.data.cast;\n    cast.map(actor => {\n      if (actor.profile_path !== null) {\n        actor.profile_path = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n      } else {\n        actor.profile_path = no_movie;\n      }\n    });\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const api = {\n  getPopularMovies,\n  getFindMovies,\n  getDetails,\n  getCredits,\n  getReviews,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Button = styled(NavLink)`\n    display: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 16px;\n\tmargin: 0 15px 15px 0;\n\toutline: none;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 30px;\n\tline-height: 30px;\n\tfont-size: 12.5px;\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tvertical-align: top;\n\tcolor: #fff;\n\tbackground-color: #5181b8;\n\tcursor: pointer;\n\tuser-select: none;\n\tappearance: none;\n\ttouch-action: manipulation;\n\toverflow: hidden;\n`\n\nexport default Button;","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { api } from '../API/api-service';\nimport LinkStyled from 'components/styledCssForLink/LinkStyled';\nimport Button from 'components/styledCssForLink/ButtonStyled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    api.getDetails(movieId).then(item => setMovie(item));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button to={backLinkLocationRef.current}>back</Button>\n      <div className=\"movie\">\n        <img src={movie.poster_path} alt={movie.title} width=\"250px\" />\n        <div className=\"description\">\n          <h2>{movie.title || movie.name}</h2>\n          <p>Overview:</p>\n          <p>{movie.overview}</p>\n          <p>Popularity: {movie.popularity}</p>\n          <p>Release date: {movie.release_date}</p>\n        </div>\n      </div>\n      <div className='movie-info'>\n        <p>Additional information</p>\n        <ul className='movie-info-link'>\n          <li className='link'>\n            <LinkStyled to=\"cast\">cast</LinkStyled>\n          </li>\n          <li className='link'>\n            <LinkStyled to=\"reviews\">reviews</LinkStyled>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","MAIN_URL","getPopularMovies","axios","response","data","results","movies","map","movie","poster_path","no_movie","console","error","getFindMovies","query","getDetails","movieId","getCredits","cast","actor","profile_path","getReviews","reviews","api","styled","NavLink","useParams","useState","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","item","to","current","className","src","alt","title","width","name","overview","popularity","release_date","LinkStyled"],"sourceRoot":""}