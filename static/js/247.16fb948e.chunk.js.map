{"version":3,"file":"static/js/247.16fb948e.chunk.js","mappings":"8MAGMA,EAAU,4CACVC,EAAW,+BAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAAsCD,IAFjE,cAEUI,EAFV,gBAGyBA,EAASC,KAAKC,QAHvC,cAGUC,EAHV,yBAIWA,GAJX,kCAMIC,QAAQC,MAAR,MANJ,iFAUeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BC,GAA7B,kGAE2BR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wBACMD,EADN,4DACiEW,IAH5F,cAEUP,EAFV,gBAKyBA,EAASC,KAAKC,QALvC,cAKUC,EALV,yBAMWA,GANX,kCAQIC,QAAQC,MAAR,MARJ,iFAYeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,kGAE2BV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAY,GADA,OACUb,EADV,oBAF3B,cAEUI,EAFV,OAKUU,EAAQV,EAASC,KAL3B,kBAMWS,GANX,gCAQIN,QAAQC,MAAR,MARJ,gFAYeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BF,GAA1B,kGAE2BV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAY,EADA,mBACkBb,EADlB,oBAF3B,cAEUI,EAFV,OAKUY,EAAOZ,EAASC,KAAKW,KAL/B,kBAMWA,GANX,gCAQIR,QAAQC,MAAR,MARJ,gFAYeQ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BJ,GAA1B,kGAE2BV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAY,EADA,mBACkBb,EADlB,oBAF3B,cAEUI,EAFV,OAKUc,EAAUd,EAASC,KAAKC,QALlC,kBAMWY,GANX,gCAQIV,QAAQC,MAAR,MARJ,gFAYO,IAAMU,EAAM,CACjBjB,iBA7DF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA4DbQ,cA5DF,SAU6B,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAmDbE,WAnDF,SAY0B,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwCbG,WAxCF,SAY0B,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6BbE,WA7BF,SAY0B,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,uFClBf,UA7Ba,WACX,IAAQJ,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAOA,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,EAAAA,EAAAA,WAAeN,GAASW,MAAK,SAAAC,GAAI,OAAIH,EAAQG,EAAZ,GAClC,GAAE,CAACZ,IAEmB,IAAhBG,EAAKU,QACV,uBAPc,2CASd,wBACGV,EAAKW,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IAAMD,EAAME,aAAP,yCAAmEF,EAAME,cAAnDC,EAC3BC,IAAKJ,EAAMK,KACXC,MAAM,WAER,cAAGC,UAAU,QAAb,SAAsBP,EAAMK,SANrBL,EAAMQ,GASlB,KAGN,C","sources":["API/api-service.js","components/Cast/Cast.jsx"],"sourcesContent":["/* eslint-disable array-callback-return */\nimport axios from 'axios';\n\nconst API_KEY = '?api_key=fb4eca5dd3545235e4fd6796c70d4d40';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nasync function getPopularMovies() {\n  try {\n    const response = await axios.get(`${MAIN_URL}/movie/popular${API_KEY}`);\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getFindMovies(query) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/search/movie${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}${API_KEY}&language=en-US`\n    );\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const api = {\n  getPopularMovies,\n  getFindMovies,\n  getDetails,\n  getCredits,\n  getReviews,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { api } from 'API/api-service';\nimport no_movie from '../../images/no-movie.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const message = \"We don't have any cast for this movie\";\n\n  useEffect(() => {\n    api.getCredits(movieId).then(item => setCast(item));\n  }, [movieId]);\n\n  return cast.length === 0 ? (\n    <p>{message}</p>\n  ) : (\n    <ul>\n      {cast.map(actor => {\n        return (\n          <li key={actor.id}>\n            <img\n              src={!actor.profile_path ? no_movie : `https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              width=\"200px\"\n            />\n            <p className='title'>{actor.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","MAIN_URL","getPopularMovies","axios","response","data","results","movies","console","error","getFindMovies","query","getDetails","movieId","movie","getCredits","cast","getReviews","reviews","api","useParams","useState","setCast","useEffect","then","item","length","map","actor","src","profile_path","no_movie","alt","name","width","className","id"],"sourceRoot":""}