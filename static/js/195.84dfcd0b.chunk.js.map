{"version":3,"file":"static/js/195.84dfcd0b.chunk.js","mappings":"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","sources":["API/api-service.js","components/styledCssForLink/ButtonStyled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["/* eslint-disable array-callback-return */\nimport axios from 'axios';\n\nconst API_KEY = '?api_key=fb4eca5dd3545235e4fd6796c70d4d40';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nasync function getPopularMovies() {\n  try {\n    const response = await axios.get(`${MAIN_URL}/movie/popular${API_KEY}`);\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getFindMovies(query) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/search/movie${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}${API_KEY}&language=en-US`\n    );\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const api = {\n  getPopularMovies,\n  getFindMovies,\n  getDetails,\n  getCredits,\n  getReviews,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Button = styled(NavLink)`\n    display: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 16px;\n\tmargin: 0 15px 15px 0;\n\toutline: none;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 30px;\n\tline-height: 30px;\n\tfont-size: 12.5px;\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tvertical-align: top;\n\tcolor: #fff;\n\tbackground-color: #5181b8;\n\tcursor: pointer;\n\tuser-select: none;\n\tappearance: none;\n\ttouch-action: manipulation;\n\toverflow: hidden;\n`\n\nexport default Button;","import PropTypes from 'prop-types';\nimport no_movie from '../../images/no-movie.jpg';\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <div className=\"movie\">\n      <img\n        src={movie.poster_path !== null ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : no_movie}\n        alt={movie.title}\n        width=\"250px\"\n      />\n      <div className=\"description\">\n        <h2>{movie.title || movie.name}</h2>\n        <p>Overview:</p>\n        <p>{movie.overview}</p>\n        <p>Popularity: {movie.popularity}</p>\n        <p>Release date: {movie.release_date}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object.isRequired,\n}\n\nexport default MovieInfo;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { api } from '../API/api-service';\nimport LinkStyled from 'components/styledCssForLink/LinkStyled';\nimport Button from 'components/styledCssForLink/ButtonStyled';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    api.getDetails(movieId).then(item => setMovie(item));\n  }, [movieId]);\n\n  if (!movie) {\n    return <>Not Found</>;\n  }\n\n  return (\n    <>\n      <Button to={backLinkLocationRef.current}>back</Button>\n      {movie && (\n        <>\n          <MovieInfo movie={ movie} />\n          <div className=\"movie-info\">\n            <p>Additional information</p>\n            <ul className=\"movie-info-link\">\n              <li className=\"link\">\n                <LinkStyled to=\"cast\">cast</LinkStyled>\n              </li>\n              <li className=\"link\">\n                <LinkStyled to=\"reviews\">reviews</LinkStyled>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","MAIN_URL","getPopularMovies","axios","response","data","results","movies","console","error","getFindMovies","query","getDetails","movieId","movie","getCredits","cast","getReviews","reviews","api","styled","NavLink","className","src","poster_path","no_movie","alt","title","width","name","overview","popularity","release_date","useParams","useState","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","item","to","current","LinkStyled"],"sourceRoot":""}