{"version":3,"file":"static/js/134.e68d7c3b.chunk.js","mappings":"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","sources":["API/api-service.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["/* eslint-disable array-callback-return */\nimport axios from 'axios';\n\nconst API_KEY = '?api_key=fb4eca5dd3545235e4fd6796c70d4d40';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nasync function getPopularMovies() {\n  try {\n    const response = await axios.get(`${MAIN_URL}/movie/popular${API_KEY}`);\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getFindMovies(query) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/search/movie${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}${API_KEY}&language=en-US`\n    );\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const api = {\n  getPopularMovies,\n  getFindMovies,\n  getDetails,\n  getCredits,\n  getReviews,\n};\n","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport no_movie from '../../images/no-movie.jpg';\n\nconst MoviesList = ({ movie, location, to }) => {\n  return (\n    <li>\n      <NavLink to={to} state={{ from: location }}>\n        <img\n          src={\n            movie.poster_path !== null ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : no_movie\n          }\n          alt=\"\"\n          width=\"250px\"\n        />\n        <p className=\"title\">Title: {movie.title || movie.name}</p>\n      </NavLink>\n    </li>\n  );\n};\n\nMoviesList.propTypes = {\n  movie: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  to: PropTypes.string.isRequired,\n}\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { api } from 'API/api-service';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchQuery, setSwarchQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    api.getFindMovies(searchQuery).then(items => setSearchMovies(items));\n  }, [searchQuery]);\n\n  const getQuery = e => {\n    e.preventDefault();\n    setSwarchQuery(e.target.search.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={getQuery}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">search</button>\n      </form>\n      <ul>\n        {searchMovies.length > 0 &&\n          searchMovies.map(movie => <MoviesList key={movie.id} movie={movie} location={location} to={`${movie.id}`} />)}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","MAIN_URL","getPopularMovies","axios","response","data","results","movies","console","error","getFindMovies","query","getDetails","movieId","movie","getCredits","cast","getReviews","reviews","api","location","to","state","from","src","poster_path","no_movie","alt","width","className","title","name","useState","searchQuery","setSwarchQuery","searchMovies","setSearchMovies","useLocation","useEffect","then","items","onSubmit","e","preventDefault","target","search","value","type","length","map","id"],"sourceRoot":""}